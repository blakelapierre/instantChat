{"version":3,"file":"src/benchmarker.js","sources":["src/benchmarker.js"],"names":[],"mappings":"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","sourceRoot":"/home/blake/development/instantChat/services/benchmarker","sourcesContent":["module.exports = config => {\n  var ETCD = require('node-etcd'),\n      path = require('path'),\n      http = require('http'),\n      express = require('express'),\n      app = express(),\n      _ = require('lodash');\n\n  var etcd = new ETCD(config.etcd.host, config.etcd.port);\n  var machineStats = {};\n\n  app.use(express.static(path.join(config.distRoot, 'frontend')));\n\n  app.get('/', (req, res) => {\n    res.json(machineStats);\n    res.end();\n  });\n\n  var webserver = http.createServer(app);\n\n  webserver.listen(config.httpPort);\n  console.log('server up on', config.httpPort);\n\n  var machineWatcher = etcd.watcher('machines', 0, {recursive: true});\n\n  machineWatcher.on('change', (body, header) => {\n    processStatNode(body.node);\n  });\n  machineWatcher.on('error', (error) => console.log('watcher_change', error));\n\n  etcd.get('machines/', {recursive:true}, (err, body) => {\n    if (err) {\n      console.log(err);\n      return;\n    }\n\n    _.each(body.node.nodes, machineNode => {\n      _.each(machineNode.nodes, statsNode => {\n        _.each(statsNode.nodes, processStatNode);\n      });\n    });\n  });\n\n  function processStatNode(node) {\n    console.log(node);\n    var matches = /^\\/machines\\/(.*?)\\/stats\\/(.*?)$/.exec(node.key),\n        machineName = matches[1],\n        statName = matches[2];\n\n    console.log('updating machine', machineName, ':', statName);\n\n    var machine = machineStats[machineName] = machineStats[machineName] || {};\n\n    machine[statName] = node.value;\n\n    console.log(machine);\n  }\n\n  function grabLastKey(key) {\n    var index = key.lastIndexOf('/');\n\n    return key.substring(index + 1);\n  }\n};"]}