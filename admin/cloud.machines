[{"id":"0f90c9a1-99bd-47d3-88a9-5943175e1b07","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/a42966873df1f61288a2db6dd9079d44\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=influxdb,image=coreos-alpha,size=512mb,id=0f90c9a1-99bd-47d3-88a9-5943175e1b07\n\n  ssh_authorized_keys:\n    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDQIwGRmmZKxKiZyWRkGk95wBUuhmyitOfJQBlhLeL7n0qDxueU+oxRH3swrWYbHY8daOAKhlzQmpqAQSoFiLzdK0N5aDRyv5U01wvzRuWbQ3Fk/2iwOUzJx2y/rDVd3NbF26EBTS+7mS2n319r1TNYsuekzMD+VpZBFymcqttoOlgNnuecytpMFj18YuB3muGRgiAWZHx0md1e3/bVuVK16VEJ8MKFPWBsRiZ667gzW5b88XZO4Zvo/wAQgp6vakMaLOinxOt0IhfsVNU/miFd0AMBPq04s+iSApxBvQ/+DbBphQT4bRfgI8w8QgfwO8Hwz4MpojeAk2Dhsvmupyp blakelapierre@gmail.com\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      \n      (\n        SWAPSIZE=4G\n        SWAPFILE=/${SWAPSIZE}iB.swap\n        sudo /usr/bin/fallocate -l ${SWAPSIZE} ${SWAPFILE};\n        sudo /usr/bin/chmod 600 ${SWAPFILE};\n        sudo /usr/bin/chattr +C ${SWAPFILE};\n        sudo /usr/sbin/mkswap ${SWAPFILE};\n        sudo /usr/sbin/losetup -f ${SWAPFILE};\n        sudo /usr/sbin/swapon $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1);\n      ) &\n      \n      function set {\n        until etcdctl set $1 $2; do echo 'etcd not ready...sleeping' && sleep 1; done\n      }\n      \n      set /machines/$(hostname)/stats/on $(TIME=\"@$(grep btime /proc/stat | cut -d ' ' -f2)\" && date --date=$TIME -Ins)\n      set /machines/$(hostname)/stats/joindate $(date -Ins)\n      #until etcdctl set /machines/$(hostname)/\"$(date)\" 1; do echo 'etcd not ready...sleeping' && sleep 1; done\n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl submit cadvisor.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      until fleetctl submit influxdb.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl start cadvisor; do echo 'fleect not ready...sleeping' && sleep 1; done\n      until fleetctl start influxdb; do echo 'fleect not ready...sleeping' && sleep 1; done\n      \n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/cadvisorPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull google/cadvisor:latest && until etcdctl set /machines/$(hostname)/stats/cadvisorPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"until INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service); do echo 'influxdb not found...retrying' && sleep 1; done && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%p google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      Global=true\n      \n  - path: /home/core/influxdb.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=influxdb.service\n      \n      After=bootstrap.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      EnvironmentFile=/etc/environment\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/influxdbPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull tutum/influxdb:latest && until etcdctl set /machines/$(hostname)/stats/influxdbPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"/usr/bin/etcdctl set /services/influxdb/influxdb.service ${COREOS_PUBLIC_IPV4}:8086 && /usr/bin/docker run --rm --name %p -p 8083:8083 -p 8086:8086 --expose 8090 --expose 8099 -e PRE_CREATE_DB=cadvisor tutum/influxdb:latest\"\n      ExecStop=/usr/bin/docker stop %p\n      ExecStopPost=/usr/bin/etcdctl rm /services/influxdb/influxdb.service\n      \n      [X-Fleet]\n      MachineMetadata=role=influxdb\n","response":{"droplet":{"id":2760547,"name":"0f90c9a1-99bd-47d3-88a9-5943175e1b07","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-10-02T08:25:10Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33610910,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33610910"}]}}},{"id":"bb7d8e27-ce21-44ef-bee8-f67c6986cecb","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/a42966873df1f61288a2db6dd9079d44\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=grafana,image=coreos-alpha,size=512mb,id=bb7d8e27-ce21-44ef-bee8-f67c6986cecb\n\n  ssh_authorized_keys:\n    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDQIwGRmmZKxKiZyWRkGk95wBUuhmyitOfJQBlhLeL7n0qDxueU+oxRH3swrWYbHY8daOAKhlzQmpqAQSoFiLzdK0N5aDRyv5U01wvzRuWbQ3Fk/2iwOUzJx2y/rDVd3NbF26EBTS+7mS2n319r1TNYsuekzMD+VpZBFymcqttoOlgNnuecytpMFj18YuB3muGRgiAWZHx0md1e3/bVuVK16VEJ8MKFPWBsRiZ667gzW5b88XZO4Zvo/wAQgp6vakMaLOinxOt0IhfsVNU/miFd0AMBPq04s+iSApxBvQ/+DbBphQT4bRfgI8w8QgfwO8Hwz4MpojeAk2Dhsvmupyp blakelapierre@gmail.com\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      \n      (\n        SWAPSIZE=4G\n        SWAPFILE=/${SWAPSIZE}iB.swap\n        sudo /usr/bin/fallocate -l ${SWAPSIZE} ${SWAPFILE};\n        sudo /usr/bin/chmod 600 ${SWAPFILE};\n        sudo /usr/bin/chattr +C ${SWAPFILE};\n        sudo /usr/sbin/mkswap ${SWAPFILE};\n        sudo /usr/sbin/losetup -f ${SWAPFILE};\n        sudo /usr/sbin/swapon $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1);\n      ) &\n      \n      function set {\n        until etcdctl set $1 $2; do echo 'etcd not ready...sleeping' && sleep 1; done\n      }\n      \n      set /machines/$(hostname)/stats/on $(TIME=\"@$(grep btime /proc/stat | cut -d ' ' -f2)\" && date --date=$TIME -Ins)\n      set /machines/$(hostname)/stats/joindate $(date -Ins)\n      #until etcdctl set /machines/$(hostname)/\"$(date)\" 1; do echo 'etcd not ready...sleeping' && sleep 1; done\n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl submit cadvisor.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      until fleetctl submit grafana.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl start cadvisor; do echo 'fleect not ready...sleeping' && sleep 1; done\n      until fleetctl start grafana; do echo 'fleect not ready...sleeping' && sleep 1; done\n      \n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/cadvisorPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull google/cadvisor:latest && until etcdctl set /machines/$(hostname)/stats/cadvisorPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"until INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service); do echo 'influxdb not found...retrying' && sleep 1; done && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%p google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      Global=true\n      \n  - path: /home/core/grafana.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=grafana\n      \n      After=bootstrap.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/grafanaPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull tutum/grafana:latest && until etcdctl set /machines/$(hostname)/stats/grafanaPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service) INFLUXDB_HOST=$(echo $INFLUXDB | /usr/bin/awk -F':' '{print $1}') INFLUXDB_PORT=$(echo $INFLUXDB | /usr/bin/awk -F':' '{print $2}') && /usr/bin/docker run --rm --name=%p -p 80:80 -e HTTP_USER=root -e HTTP_PASS=root -e INFLUXDB_HOST=$INFLUXDB_HOST -e INFLUXDB_PORT=$INFLUXDB_PORT -e INFLUXDB_NAME=cadvisor tutum/grafana:latest\"\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      MachineMetadata=role=grafana\n","response":{"droplet":{"id":2760548,"name":"bb7d8e27-ce21-44ef-bee8-f67c6986cecb","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-10-02T08:25:11Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33610911,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33610911"}]}}},{"id":"73b36217-b1c2-4525-9d57-4b8594b24740","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/a42966873df1f61288a2db6dd9079d44\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=benchmarker,image=coreos-alpha,size=512mb,id=73b36217-b1c2-4525-9d57-4b8594b24740\n\n  ssh_authorized_keys:\n    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDQIwGRmmZKxKiZyWRkGk95wBUuhmyitOfJQBlhLeL7n0qDxueU+oxRH3swrWYbHY8daOAKhlzQmpqAQSoFiLzdK0N5aDRyv5U01wvzRuWbQ3Fk/2iwOUzJx2y/rDVd3NbF26EBTS+7mS2n319r1TNYsuekzMD+VpZBFymcqttoOlgNnuecytpMFj18YuB3muGRgiAWZHx0md1e3/bVuVK16VEJ8MKFPWBsRiZ667gzW5b88XZO4Zvo/wAQgp6vakMaLOinxOt0IhfsVNU/miFd0AMBPq04s+iSApxBvQ/+DbBphQT4bRfgI8w8QgfwO8Hwz4MpojeAk2Dhsvmupyp blakelapierre@gmail.com\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      \n      (\n        SWAPSIZE=4G\n        SWAPFILE=/${SWAPSIZE}iB.swap\n        sudo /usr/bin/fallocate -l ${SWAPSIZE} ${SWAPFILE};\n        sudo /usr/bin/chmod 600 ${SWAPFILE};\n        sudo /usr/bin/chattr +C ${SWAPFILE};\n        sudo /usr/sbin/mkswap ${SWAPFILE};\n        sudo /usr/sbin/losetup -f ${SWAPFILE};\n        sudo /usr/sbin/swapon $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1);\n      ) &\n      \n      function set {\n        until etcdctl set $1 $2; do echo 'etcd not ready...sleeping' && sleep 1; done\n      }\n      \n      set /machines/$(hostname)/stats/on $(TIME=\"@$(grep btime /proc/stat | cut -d ' ' -f2)\" && date --date=$TIME -Ins)\n      set /machines/$(hostname)/stats/joindate $(date -Ins)\n      #until etcdctl set /machines/$(hostname)/\"$(date)\" 1; do echo 'etcd not ready...sleeping' && sleep 1; done\n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl submit cadvisor.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      until fleetctl submit benchmarker.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl start cadvisor; do echo 'fleect not ready...sleeping' && sleep 1; done\n      until fleetctl start benchmarker; do echo 'fleect not ready...sleeping' && sleep 1; done\n      \n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/cadvisorPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull google/cadvisor:latest && until etcdctl set /machines/$(hostname)/stats/cadvisorPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"until INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service); do echo 'influxdb not found...retrying' && sleep 1; done && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%p google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      Global=true\n      \n  - path: /home/core/benchmarker.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=benchmarker\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/benchmarkerPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull instantchat/benchmarker && until etcdctl set /machines/$(hostname)/stats/benchmarkerPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/docker run --name %p --rm -p 4001:4001 -p 80:2771 -e ETCD_HOST=172.17.42.1 instantchat/benchmarker\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      MachineMetadata=role=benchmarker\n      \n","response":{"droplet":{"id":2760549,"name":"73b36217-b1c2-4525-9d57-4b8594b24740","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-10-02T08:25:11Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33610912,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33610912"}]}}},{"id":"c6d74914-ed35-4ed5-a379-0acb41dd6856","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/a42966873df1f61288a2db6dd9079d44\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=broadcaster,image=coreos-alpha,size=512mb,id=c6d74914-ed35-4ed5-a379-0acb41dd6856\n\n  ssh_authorized_keys:\n    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDQIwGRmmZKxKiZyWRkGk95wBUuhmyitOfJQBlhLeL7n0qDxueU+oxRH3swrWYbHY8daOAKhlzQmpqAQSoFiLzdK0N5aDRyv5U01wvzRuWbQ3Fk/2iwOUzJx2y/rDVd3NbF26EBTS+7mS2n319r1TNYsuekzMD+VpZBFymcqttoOlgNnuecytpMFj18YuB3muGRgiAWZHx0md1e3/bVuVK16VEJ8MKFPWBsRiZ667gzW5b88XZO4Zvo/wAQgp6vakMaLOinxOt0IhfsVNU/miFd0AMBPq04s+iSApxBvQ/+DbBphQT4bRfgI8w8QgfwO8Hwz4MpojeAk2Dhsvmupyp blakelapierre@gmail.com\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      \n      (\n        SWAPSIZE=4G\n        SWAPFILE=/${SWAPSIZE}iB.swap\n        sudo /usr/bin/fallocate -l ${SWAPSIZE} ${SWAPFILE};\n        sudo /usr/bin/chmod 600 ${SWAPFILE};\n        sudo /usr/bin/chattr +C ${SWAPFILE};\n        sudo /usr/sbin/mkswap ${SWAPFILE};\n        sudo /usr/sbin/losetup -f ${SWAPFILE};\n        sudo /usr/sbin/swapon $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1);\n      ) &\n      \n      function set {\n        until etcdctl set $1 $2; do echo 'etcd not ready...sleeping' && sleep 1; done\n      }\n      \n      set /machines/$(hostname)/stats/on $(TIME=\"@$(grep btime /proc/stat | cut -d ' ' -f2)\" && date --date=$TIME -Ins)\n      set /machines/$(hostname)/stats/joindate $(date -Ins)\n      #until etcdctl set /machines/$(hostname)/\"$(date)\" 1; do echo 'etcd not ready...sleeping' && sleep 1; done\n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl submit cadvisor.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      until fleetctl submit broadcaster@.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl start cadvisor; do echo 'fleect not ready...sleeping' && sleep 1; done\n      until fleetctl start broadcaster@c6d74914-ed35-4ed5-a379-0acb41dd6856; do echo 'fleect not ready...sleeping' && sleep 1; done\n      \n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/cadvisorPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull google/cadvisor:latest && until etcdctl set /machines/$(hostname)/stats/cadvisorPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"until INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service); do echo 'influxdb not found...retrying' && sleep 1; done && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%p google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      Global=true\n      \n  - path: /home/core/broadcaster@.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=broadcaster@%i\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p.%i\n      ExecStartPre=-/usr/bin/docker rm %p.%i\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/broadcasterPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull instantchat/broadcaster && until etcdctl set /machines/$(hostname)/stats/broadcasterPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/docker run --name=%p.%i --rm --privileged instantchat/broadcaster\n      ExecStop=/usr/bin/docker stop %p.%i\n      \n      [X-Fleet]\n      MachineMetadata=role=broadcaster\n","response":{"droplet":{"id":2760550,"name":"c6d74914-ed35-4ed5-a379-0acb41dd6856","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-10-02T08:25:12Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33610915,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33610915"}]}}},{"id":"20e69c6f-dc26-4130-ae79-6a098a2b8116","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/a42966873df1f61288a2db6dd9079d44\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=broadcaster,image=coreos-alpha,size=512mb,id=20e69c6f-dc26-4130-ae79-6a098a2b8116\n\n  ssh_authorized_keys:\n    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDQIwGRmmZKxKiZyWRkGk95wBUuhmyitOfJQBlhLeL7n0qDxueU+oxRH3swrWYbHY8daOAKhlzQmpqAQSoFiLzdK0N5aDRyv5U01wvzRuWbQ3Fk/2iwOUzJx2y/rDVd3NbF26EBTS+7mS2n319r1TNYsuekzMD+VpZBFymcqttoOlgNnuecytpMFj18YuB3muGRgiAWZHx0md1e3/bVuVK16VEJ8MKFPWBsRiZ667gzW5b88XZO4Zvo/wAQgp6vakMaLOinxOt0IhfsVNU/miFd0AMBPq04s+iSApxBvQ/+DbBphQT4bRfgI8w8QgfwO8Hwz4MpojeAk2Dhsvmupyp blakelapierre@gmail.com\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      \n      (\n        SWAPSIZE=4G\n        SWAPFILE=/${SWAPSIZE}iB.swap\n        sudo /usr/bin/fallocate -l ${SWAPSIZE} ${SWAPFILE};\n        sudo /usr/bin/chmod 600 ${SWAPFILE};\n        sudo /usr/bin/chattr +C ${SWAPFILE};\n        sudo /usr/sbin/mkswap ${SWAPFILE};\n        sudo /usr/sbin/losetup -f ${SWAPFILE};\n        sudo /usr/sbin/swapon $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1);\n      ) &\n      \n      function set {\n        until etcdctl set $1 $2; do echo 'etcd not ready...sleeping' && sleep 1; done\n      }\n      \n      set /machines/$(hostname)/stats/on $(TIME=\"@$(grep btime /proc/stat | cut -d ' ' -f2)\" && date --date=$TIME -Ins)\n      set /machines/$(hostname)/stats/joindate $(date -Ins)\n      #until etcdctl set /machines/$(hostname)/\"$(date)\" 1; do echo 'etcd not ready...sleeping' && sleep 1; done\n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl submit cadvisor.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      until fleetctl submit broadcaster@.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl start cadvisor; do echo 'fleect not ready...sleeping' && sleep 1; done\n      until fleetctl start broadcaster@20e69c6f-dc26-4130-ae79-6a098a2b8116; do echo 'fleect not ready...sleeping' && sleep 1; done\n      \n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/cadvisorPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull google/cadvisor:latest && until etcdctl set /machines/$(hostname)/stats/cadvisorPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"until INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service); do echo 'influxdb not found...retrying' && sleep 1; done && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%p google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      Global=true\n      \n  - path: /home/core/broadcaster@.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=broadcaster@%i\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p.%i\n      ExecStartPre=-/usr/bin/docker rm %p.%i\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/broadcasterPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull instantchat/broadcaster && until etcdctl set /machines/$(hostname)/stats/broadcasterPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/docker run --name=%p.%i --rm --privileged instantchat/broadcaster\n      ExecStop=/usr/bin/docker stop %p.%i\n      \n      [X-Fleet]\n      MachineMetadata=role=broadcaster\n","response":{"droplet":{"id":2760551,"name":"20e69c6f-dc26-4130-ae79-6a098a2b8116","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-10-02T08:25:13Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33610917,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33610917"}]}}},{"id":"5a705729-dcaf-470e-b8d8-72dfbf927800","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/a42966873df1f61288a2db6dd9079d44\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=broadcaster,image=coreos-alpha,size=512mb,id=5a705729-dcaf-470e-b8d8-72dfbf927800\n\n  ssh_authorized_keys:\n    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDQIwGRmmZKxKiZyWRkGk95wBUuhmyitOfJQBlhLeL7n0qDxueU+oxRH3swrWYbHY8daOAKhlzQmpqAQSoFiLzdK0N5aDRyv5U01wvzRuWbQ3Fk/2iwOUzJx2y/rDVd3NbF26EBTS+7mS2n319r1TNYsuekzMD+VpZBFymcqttoOlgNnuecytpMFj18YuB3muGRgiAWZHx0md1e3/bVuVK16VEJ8MKFPWBsRiZ667gzW5b88XZO4Zvo/wAQgp6vakMaLOinxOt0IhfsVNU/miFd0AMBPq04s+iSApxBvQ/+DbBphQT4bRfgI8w8QgfwO8Hwz4MpojeAk2Dhsvmupyp blakelapierre@gmail.com\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      \n      (\n        SWAPSIZE=4G\n        SWAPFILE=/${SWAPSIZE}iB.swap\n        sudo /usr/bin/fallocate -l ${SWAPSIZE} ${SWAPFILE};\n        sudo /usr/bin/chmod 600 ${SWAPFILE};\n        sudo /usr/bin/chattr +C ${SWAPFILE};\n        sudo /usr/sbin/mkswap ${SWAPFILE};\n        sudo /usr/sbin/losetup -f ${SWAPFILE};\n        sudo /usr/sbin/swapon $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1);\n      ) &\n      \n      function set {\n        until etcdctl set $1 $2; do echo 'etcd not ready...sleeping' && sleep 1; done\n      }\n      \n      set /machines/$(hostname)/stats/on $(TIME=\"@$(grep btime /proc/stat | cut -d ' ' -f2)\" && date --date=$TIME -Ins)\n      set /machines/$(hostname)/stats/joindate $(date -Ins)\n      #until etcdctl set /machines/$(hostname)/\"$(date)\" 1; do echo 'etcd not ready...sleeping' && sleep 1; done\n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl submit cadvisor.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      until fleetctl submit broadcaster@.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl start cadvisor; do echo 'fleect not ready...sleeping' && sleep 1; done\n      until fleetctl start broadcaster@5a705729-dcaf-470e-b8d8-72dfbf927800; do echo 'fleect not ready...sleeping' && sleep 1; done\n      \n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/cadvisorPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull google/cadvisor:latest && until etcdctl set /machines/$(hostname)/stats/cadvisorPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"until INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service); do echo 'influxdb not found...retrying' && sleep 1; done && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%p google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      Global=true\n      \n  - path: /home/core/broadcaster@.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=broadcaster@%i\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p.%i\n      ExecStartPre=-/usr/bin/docker rm %p.%i\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/broadcasterPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull instantchat/broadcaster && until etcdctl set /machines/$(hostname)/stats/broadcasterPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/docker run --name=%p.%i --rm --privileged instantchat/broadcaster\n      ExecStop=/usr/bin/docker stop %p.%i\n      \n      [X-Fleet]\n      MachineMetadata=role=broadcaster\n","response":{"droplet":{"id":2760552,"name":"5a705729-dcaf-470e-b8d8-72dfbf927800","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-10-02T08:25:15Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33610918,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33610918"}]}}},{"id":"59ff4cd6-c30f-4e60-84c0-0e9a3dbb2956","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/a42966873df1f61288a2db6dd9079d44\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=broadcaster,image=coreos-alpha,size=512mb,id=59ff4cd6-c30f-4e60-84c0-0e9a3dbb2956\n\n  ssh_authorized_keys:\n    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDQIwGRmmZKxKiZyWRkGk95wBUuhmyitOfJQBlhLeL7n0qDxueU+oxRH3swrWYbHY8daOAKhlzQmpqAQSoFiLzdK0N5aDRyv5U01wvzRuWbQ3Fk/2iwOUzJx2y/rDVd3NbF26EBTS+7mS2n319r1TNYsuekzMD+VpZBFymcqttoOlgNnuecytpMFj18YuB3muGRgiAWZHx0md1e3/bVuVK16VEJ8MKFPWBsRiZ667gzW5b88XZO4Zvo/wAQgp6vakMaLOinxOt0IhfsVNU/miFd0AMBPq04s+iSApxBvQ/+DbBphQT4bRfgI8w8QgfwO8Hwz4MpojeAk2Dhsvmupyp blakelapierre@gmail.com\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      \n      (\n        SWAPSIZE=4G\n        SWAPFILE=/${SWAPSIZE}iB.swap\n        sudo /usr/bin/fallocate -l ${SWAPSIZE} ${SWAPFILE};\n        sudo /usr/bin/chmod 600 ${SWAPFILE};\n        sudo /usr/bin/chattr +C ${SWAPFILE};\n        sudo /usr/sbin/mkswap ${SWAPFILE};\n        sudo /usr/sbin/losetup -f ${SWAPFILE};\n        sudo /usr/sbin/swapon $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1);\n      ) &\n      \n      function set {\n        until etcdctl set $1 $2; do echo 'etcd not ready...sleeping' && sleep 1; done\n      }\n      \n      set /machines/$(hostname)/stats/on $(TIME=\"@$(grep btime /proc/stat | cut -d ' ' -f2)\" && date --date=$TIME -Ins)\n      set /machines/$(hostname)/stats/joindate $(date -Ins)\n      #until etcdctl set /machines/$(hostname)/\"$(date)\" 1; do echo 'etcd not ready...sleeping' && sleep 1; done\n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl submit cadvisor.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      until fleetctl submit broadcaster@.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl start cadvisor; do echo 'fleect not ready...sleeping' && sleep 1; done\n      until fleetctl start broadcaster@59ff4cd6-c30f-4e60-84c0-0e9a3dbb2956; do echo 'fleect not ready...sleeping' && sleep 1; done\n      \n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/cadvisorPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull google/cadvisor:latest && until etcdctl set /machines/$(hostname)/stats/cadvisorPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"until INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service); do echo 'influxdb not found...retrying' && sleep 1; done && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%p google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      Global=true\n      \n  - path: /home/core/broadcaster@.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=broadcaster@%i\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p.%i\n      ExecStartPre=-/usr/bin/docker rm %p.%i\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/broadcasterPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull instantchat/broadcaster && until etcdctl set /machines/$(hostname)/stats/broadcasterPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/docker run --name=%p.%i --rm --privileged instantchat/broadcaster\n      ExecStop=/usr/bin/docker stop %p.%i\n      \n      [X-Fleet]\n      MachineMetadata=role=broadcaster\n","response":{"droplet":{"id":2760553,"name":"59ff4cd6-c30f-4e60-84c0-0e9a3dbb2956","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-10-02T08:25:15Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33610920,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33610920"}]}}},{"id":"42afba9d-44f9-4578-a9fe-8265f60fdfc0","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/a42966873df1f61288a2db6dd9079d44\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=broadcaster,image=coreos-alpha,size=512mb,id=42afba9d-44f9-4578-a9fe-8265f60fdfc0\n\n  ssh_authorized_keys:\n    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDQIwGRmmZKxKiZyWRkGk95wBUuhmyitOfJQBlhLeL7n0qDxueU+oxRH3swrWYbHY8daOAKhlzQmpqAQSoFiLzdK0N5aDRyv5U01wvzRuWbQ3Fk/2iwOUzJx2y/rDVd3NbF26EBTS+7mS2n319r1TNYsuekzMD+VpZBFymcqttoOlgNnuecytpMFj18YuB3muGRgiAWZHx0md1e3/bVuVK16VEJ8MKFPWBsRiZ667gzW5b88XZO4Zvo/wAQgp6vakMaLOinxOt0IhfsVNU/miFd0AMBPq04s+iSApxBvQ/+DbBphQT4bRfgI8w8QgfwO8Hwz4MpojeAk2Dhsvmupyp blakelapierre@gmail.com\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      \n      (\n        SWAPSIZE=4G\n        SWAPFILE=/${SWAPSIZE}iB.swap\n        sudo /usr/bin/fallocate -l ${SWAPSIZE} ${SWAPFILE};\n        sudo /usr/bin/chmod 600 ${SWAPFILE};\n        sudo /usr/bin/chattr +C ${SWAPFILE};\n        sudo /usr/sbin/mkswap ${SWAPFILE};\n        sudo /usr/sbin/losetup -f ${SWAPFILE};\n        sudo /usr/sbin/swapon $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1);\n      ) &\n      \n      function set {\n        until etcdctl set $1 $2; do echo 'etcd not ready...sleeping' && sleep 1; done\n      }\n      \n      set /machines/$(hostname)/stats/on $(TIME=\"@$(grep btime /proc/stat | cut -d ' ' -f2)\" && date --date=$TIME -Ins)\n      set /machines/$(hostname)/stats/joindate $(date -Ins)\n      #until etcdctl set /machines/$(hostname)/\"$(date)\" 1; do echo 'etcd not ready...sleeping' && sleep 1; done\n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl submit cadvisor.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      until fleetctl submit broadcaster@.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl start cadvisor; do echo 'fleect not ready...sleeping' && sleep 1; done\n      until fleetctl start broadcaster@42afba9d-44f9-4578-a9fe-8265f60fdfc0; do echo 'fleect not ready...sleeping' && sleep 1; done\n      \n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/cadvisorPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull google/cadvisor:latest && until etcdctl set /machines/$(hostname)/stats/cadvisorPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"until INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service); do echo 'influxdb not found...retrying' && sleep 1; done && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%p google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      Global=true\n      \n  - path: /home/core/broadcaster@.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=broadcaster@%i\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p.%i\n      ExecStartPre=-/usr/bin/docker rm %p.%i\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/broadcasterPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull instantchat/broadcaster && until etcdctl set /machines/$(hostname)/stats/broadcasterPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/docker run --name=%p.%i --rm --privileged instantchat/broadcaster\n      ExecStop=/usr/bin/docker stop %p.%i\n      \n      [X-Fleet]\n      MachineMetadata=role=broadcaster\n","response":{"droplet":{"id":2760554,"name":"42afba9d-44f9-4578-a9fe-8265f60fdfc0","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-10-02T08:25:16Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33610921,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33610921"}]}}},{"id":"88daf514-7ddb-40b0-b863-9cf62edc0030","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/a42966873df1f61288a2db6dd9079d44\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=broadcaster,image=coreos-alpha,size=512mb,id=88daf514-7ddb-40b0-b863-9cf62edc0030\n\n  ssh_authorized_keys:\n    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDQIwGRmmZKxKiZyWRkGk95wBUuhmyitOfJQBlhLeL7n0qDxueU+oxRH3swrWYbHY8daOAKhlzQmpqAQSoFiLzdK0N5aDRyv5U01wvzRuWbQ3Fk/2iwOUzJx2y/rDVd3NbF26EBTS+7mS2n319r1TNYsuekzMD+VpZBFymcqttoOlgNnuecytpMFj18YuB3muGRgiAWZHx0md1e3/bVuVK16VEJ8MKFPWBsRiZ667gzW5b88XZO4Zvo/wAQgp6vakMaLOinxOt0IhfsVNU/miFd0AMBPq04s+iSApxBvQ/+DbBphQT4bRfgI8w8QgfwO8Hwz4MpojeAk2Dhsvmupyp blakelapierre@gmail.com\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      \n      (\n        SWAPSIZE=4G\n        SWAPFILE=/${SWAPSIZE}iB.swap\n        sudo /usr/bin/fallocate -l ${SWAPSIZE} ${SWAPFILE};\n        sudo /usr/bin/chmod 600 ${SWAPFILE};\n        sudo /usr/bin/chattr +C ${SWAPFILE};\n        sudo /usr/sbin/mkswap ${SWAPFILE};\n        sudo /usr/sbin/losetup -f ${SWAPFILE};\n        sudo /usr/sbin/swapon $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1);\n      ) &\n      \n      function set {\n        until etcdctl set $1 $2; do echo 'etcd not ready...sleeping' && sleep 1; done\n      }\n      \n      set /machines/$(hostname)/stats/on $(TIME=\"@$(grep btime /proc/stat | cut -d ' ' -f2)\" && date --date=$TIME -Ins)\n      set /machines/$(hostname)/stats/joindate $(date -Ins)\n      #until etcdctl set /machines/$(hostname)/\"$(date)\" 1; do echo 'etcd not ready...sleeping' && sleep 1; done\n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl submit cadvisor.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      until fleetctl submit broadcaster@.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl start cadvisor; do echo 'fleect not ready...sleeping' && sleep 1; done\n      until fleetctl start broadcaster@88daf514-7ddb-40b0-b863-9cf62edc0030; do echo 'fleect not ready...sleeping' && sleep 1; done\n      \n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/cadvisorPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull google/cadvisor:latest && until etcdctl set /machines/$(hostname)/stats/cadvisorPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"until INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service); do echo 'influxdb not found...retrying' && sleep 1; done && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%p google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      Global=true\n      \n  - path: /home/core/broadcaster@.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=broadcaster@%i\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p.%i\n      ExecStartPre=-/usr/bin/docker rm %p.%i\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/broadcasterPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull instantchat/broadcaster && until etcdctl set /machines/$(hostname)/stats/broadcasterPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/docker run --name=%p.%i --rm --privileged instantchat/broadcaster\n      ExecStop=/usr/bin/docker stop %p.%i\n      \n      [X-Fleet]\n      MachineMetadata=role=broadcaster\n","response":{"droplet":{"id":2760555,"name":"88daf514-7ddb-40b0-b863-9cf62edc0030","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-10-02T08:25:18Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33610922,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33610922"}]}}},{"id":"0b56b407-0360-4a2c-b8a9-27dccd35be23","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/a42966873df1f61288a2db6dd9079d44\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=broadcaster,image=coreos-alpha,size=512mb,id=0b56b407-0360-4a2c-b8a9-27dccd35be23\n\n  ssh_authorized_keys:\n    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDDQIwGRmmZKxKiZyWRkGk95wBUuhmyitOfJQBlhLeL7n0qDxueU+oxRH3swrWYbHY8daOAKhlzQmpqAQSoFiLzdK0N5aDRyv5U01wvzRuWbQ3Fk/2iwOUzJx2y/rDVd3NbF26EBTS+7mS2n319r1TNYsuekzMD+VpZBFymcqttoOlgNnuecytpMFj18YuB3muGRgiAWZHx0md1e3/bVuVK16VEJ8MKFPWBsRiZ667gzW5b88XZO4Zvo/wAQgp6vakMaLOinxOt0IhfsVNU/miFd0AMBPq04s+iSApxBvQ/+DbBphQT4bRfgI8w8QgfwO8Hwz4MpojeAk2Dhsvmupyp blakelapierre@gmail.com\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      \n      (\n        SWAPSIZE=4G\n        SWAPFILE=/${SWAPSIZE}iB.swap\n        sudo /usr/bin/fallocate -l ${SWAPSIZE} ${SWAPFILE};\n        sudo /usr/bin/chmod 600 ${SWAPFILE};\n        sudo /usr/bin/chattr +C ${SWAPFILE};\n        sudo /usr/sbin/mkswap ${SWAPFILE};\n        sudo /usr/sbin/losetup -f ${SWAPFILE};\n        sudo /usr/sbin/swapon $(/usr/sbin/losetup -j ${SWAPFILE} | /usr/bin/cut -d : -f 1);\n      ) &\n      \n      function set {\n        until etcdctl set $1 $2; do echo 'etcd not ready...sleeping' && sleep 1; done\n      }\n      \n      set /machines/$(hostname)/stats/on $(TIME=\"@$(grep btime /proc/stat | cut -d ' ' -f2)\" && date --date=$TIME -Ins)\n      set /machines/$(hostname)/stats/joindate $(date -Ins)\n      #until etcdctl set /machines/$(hostname)/\"$(date)\" 1; do echo 'etcd not ready...sleeping' && sleep 1; done\n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl submit cadvisor.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      until fleetctl submit broadcaster@.service; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      until fleetctl start cadvisor; do echo 'fleect not ready...sleeping' && sleep 1; done\n      until fleetctl start broadcaster@0b56b407-0360-4a2c-b8a9-27dccd35be23; do echo 'fleect not ready...sleeping' && sleep 1; done\n      \n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p\n      ExecStartPre=-/usr/bin/docker rm %p\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/cadvisorPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull google/cadvisor:latest && until etcdctl set /machines/$(hostname)/stats/cadvisorPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/bash -c \"until INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service); do echo 'influxdb not found...retrying' && sleep 1; done && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%p google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %p\n      \n      [X-Fleet]\n      Global=true\n      \n  - path: /home/core/broadcaster@.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=broadcaster@%i\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %p.%i\n      ExecStartPre=-/usr/bin/docker rm %p.%i\n      ExecStartPre=/bin/sh -c \"until etcdctl set /machines/$(hostname)/stats/broadcasterPull $(date -Ins); do sleep 1; done && /usr/bin/docker pull instantchat/broadcaster && until etcdctl set /machines/$(hostname)/stats/broadcasterPulled $(date -Ins); do sleep 1; done\"\n      ExecStart=/usr/bin/docker run --name=%p.%i --rm --privileged instantchat/broadcaster\n      ExecStop=/usr/bin/docker stop %p.%i\n      \n      [X-Fleet]\n      MachineMetadata=role=broadcaster\n","response":{"droplet":{"id":2760557,"name":"0b56b407-0360-4a2c-b8a9-27dccd35be23","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-10-02T08:25:18Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33610924,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33610924"}]}}}]