[{"id":"47bd4ccf-f824-411a-938b-011dc2061e2b","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/d370c1d863d46f7d0ffa7c3f28d05ebd\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=influxdb,image=coreos-alpha,size=512mb,id=47bd4ccf-f824-411a-938b-011dc2061e2b\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      # \n      # fleetctl submit cadvisor.service\n      # \n      # fleetctl submit influxdb.service\n      # \n      \n      # \n      # fleetctl start cadvisor.service\n      # \n      # fleetctl start influxdb.service\n      # \n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      fleetctl submit *\n      \n      fleetctl start *\n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor@%i.service\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      After=influxdb.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %n\n      ExecStartPre=-/usr/bin/docker rm %n\n      ExecStartPre=/usr/bin/docker pull google/cadvisor:latest\n      ExecStart=/usr/bin/bash -c \"INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service) && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%n google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %n\n      \n      [X-Fleet]\n      Global=true\n  - path: /home/core/influxdb.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=influxdb.service\n      \n      After=bootstrap.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      EnvironmentFile=/etc/environment\n      ExecStartPre=-/usr/bin/docker kill %n\n      ExecStartPre=-/usr/bin/docker rm %n\n      ExecStartPre=/usr/bin/docker pull tutum/influxdb:latest\n      ExecStart=/usr/bin/bash -c \"/usr/bin/etcdctl set /services/influxdb/influxdb.service ${COREOS_PUBLIC_IPV4}:8086 && /usr/bin/docker run --rm --name %n -p 8083:8083 -p 8086:8086 --expose 8090 --expose 8099 -e PRE_CREATE_DB=cadvisor tutum/influxdb:latest\"\n      ExecStop=/usr/bin/docker stop %n\n      ExecStopPost=/usr/bin/etcdctl rm /services/influxdb/influxdb.service\n      \n      [X-Fleet]\n      MachineMetadata=role=influxdb\n","response":{"droplet":{"id":2726120,"name":"47bd4ccf-f824-411a-938b-011dc2061e2b","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-09-28T11:24:40Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33358082,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33358082"}]}}},{"id":"4d8cee7d-3bf2-43f5-b141-51e629838160","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/d370c1d863d46f7d0ffa7c3f28d05ebd\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=grafana,image=coreos-alpha,size=512mb,id=4d8cee7d-3bf2-43f5-b141-51e629838160\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      # \n      # fleetctl submit cadvisor.service\n      # \n      # fleetctl submit grafana.service\n      # \n      \n      # \n      # fleetctl start cadvisor.service\n      # \n      # fleetctl start grafana.service\n      # \n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      fleetctl submit *\n      \n      fleetctl start *\n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor@%i.service\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      After=influxdb.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %n\n      ExecStartPre=-/usr/bin/docker rm %n\n      ExecStartPre=/usr/bin/docker pull google/cadvisor:latest\n      ExecStart=/usr/bin/bash -c \"INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service) && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%n google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %n\n      \n      [X-Fleet]\n      Global=true\n  - path: /home/core/grafana.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=grafana.service\n      \n      After=bootstrap.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %n\n      ExecStartPre=-/usr/bin/docker rm %n\n      ExecStartPre=/usr/bin/docker pull tutum/grafana:latest\n      ExecStart=/usr/bin/bash -c \"INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service) INFLUXDB_HOST=$(echo $INFLUXDB | /usr/bin/awk -F':' '{print $1}') INFLUXDB_PORT=$(echo $INFLUXDB | /usr/bin/awk -F':' '{print $2}') && /usr/bin/docker run --rm --name=%n -p 80:80 -e HTTP_USER=root -e HTTP_PASS=root -e INFLUXDB_HOST=$INFLUXDB_HOST -e INFLUXDB_PORT=$INFLUXDB_PORT -e INFLUXDB_NAME=cadvisor tutum/grafana:latest\"\n      ExecStop=/usr/bin/docker stop %n\n      \n      [X-Fleet]\n      MachineMetadata=role=grafana\n","response":{"droplet":{"id":2726121,"name":"4d8cee7d-3bf2-43f5-b141-51e629838160","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-09-28T11:24:41Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33358083,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33358083"}]}}},{"id":"f5249855-2c9e-4d58-929b-d0413c75a990","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/d370c1d863d46f7d0ffa7c3f28d05ebd\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=broadcaster,image=coreos-alpha,size=512mb,id=f5249855-2c9e-4d58-929b-d0413c75a990\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      # \n      # fleetctl submit cadvisor.service\n      # \n      # fleetctl submit broadcaster@.service\n      # \n      \n      # \n      # fleetctl start cadvisor.service\n      # \n      # fleetctl start broadcaster@.service\n      # \n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      fleetctl submit *\n      \n      fleetctl start *\n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor@%i.service\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      After=influxdb.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %n\n      ExecStartPre=-/usr/bin/docker rm %n\n      ExecStartPre=/usr/bin/docker pull google/cadvisor:latest\n      ExecStart=/usr/bin/bash -c \"INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service) && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%n google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %n\n      \n      [X-Fleet]\n      Global=true\n  - path: /home/core/broadcaster@.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=broadcaster@%i.service\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      After=collectd.service\n      \n      [Service]\n      TimeoutStartSec=0\n      ExecStartPre=-/usr/bin/docker kill %n\n      ExecStartPre=-/usr/bin/docker rm %n\n      ExecStartpre=-/usr/bin/docker pull instantchat/broadcaster\n      ExecStart=/usr/bin/docker run --name=%n --rm --privileged instantchat/broadcaster\n      ExecStop=/usr/bin/docker stop %n\n      \n      [X-Fleet]\n      MachineMetadata=role=broadcaster\n","response":{"droplet":{"id":2726122,"name":"f5249855-2c9e-4d58-929b-d0413c75a990","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-09-28T11:24:43Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33358084,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33358084"}]}}},{"id":"e9b54487-0ea3-4b4b-bac3-f41a2e374a19","provider":"digitalocean","location":"sfo1","size":"512mb","image":"coreos-alpha","keys":["40:85:f0:9b:28:ad:5d:25:b5:51:2e:ad:f3:b3:31:98"],"userData":"#cloud-config\n\ncoreos:\n  etcd:\n    discovery: https://discovery.etcd.io/d370c1d863d46f7d0ffa7c3f28d05ebd\n    addr: $public_ipv4:4001\n    peer-addr: $public_ipv4:7001\n  fleet:\n    public-ip: $public_ipv4\n    metadata: provider=digitalocean,location=sfo1,role=broadcaster,image=coreos-alpha,size=512mb,id=e9b54487-0ea3-4b4b-bac3-f41a2e374a19\n\n  units:\n    - name: etcd.service\n      command: start\n\n    - name: fleet.socket\n      command: start\n      content: |\n        [Socket]\n        ListenStream=/var/run/fleet.socket\n        Service=fleet.service\n\n        [Install]\n        WantedBy=sockets.target\n\n    - name: fleet.service\n      command: start\n\n    - name: bootstrap.service\n      command: start\n      content: |\n        [Unit]\n        Description=boostraps us\n\n        Requires=etcd.service\n        Requires=fleet.socket\n        Requires=fleet.service\n        Requires=docker.service\n\n        After=etcd.service\n        After=fleet.socket\n        After=fleet.service\n        After=docker.service\n\n        [Service]\n        ExecStart=/home/core/bootstrap.sh\n\nwrite_files:\n  - path: /home/core/bootstrap.sh\n    owner: core\n    permissions: 0700\n    content: |\n      #!/bin/bash\n      \n      #DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n      \n      cd /home/core\n      \n      # \n      # fleetctl submit cadvisor.service\n      # \n      # fleetctl submit broadcaster@.service\n      # \n      \n      # \n      # fleetctl start cadvisor.service\n      # \n      # fleetctl start broadcaster@.service\n      # \n      \n      until fleetctl list-units; do echo 'fleet not ready...sleeping' && sleep 1; done\n      \n      fleetctl submit *\n      \n      fleetctl start *\n  - path: /home/core/cadvisor.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=cadvisor@%i.service\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      After=influxdb.service\n      \n      [Service]\n      TimeoutStartSec=0\n      Restart=always\n      ExecStartPre=-/usr/bin/docker kill %n\n      ExecStartPre=-/usr/bin/docker rm %n\n      ExecStartPre=/usr/bin/docker pull google/cadvisor:latest\n      ExecStart=/usr/bin/bash -c \"INFLUXDB=$(/usr/bin/etcdctl get /services/influxdb/influxdb.service) && /usr/bin/docker run --rm --volume=/var/run:/var/run:rw --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro --publish=8080:8080 --name=%n google/cadvisor:latest -storage_driver=influxdb -log_dir=/ -storage_driver_host=$INFLUXDB\"\n      ExecStop=/usr/bin/docker stop %n\n      \n      [X-Fleet]\n      Global=true\n  - path: /home/core/broadcaster@.service\n    owner: core\n    permissions: 0600\n    content: |\n      [Unit]\n      Description=broadcaster@%i.service\n      \n      After=etcd.service\n      After=fleet.service\n      After=docker.service\n      After=collectd.service\n      \n      [Service]\n      TimeoutStartSec=0\n      ExecStartPre=-/usr/bin/docker kill %n\n      ExecStartPre=-/usr/bin/docker rm %n\n      ExecStartpre=-/usr/bin/docker pull instantchat/broadcaster\n      ExecStart=/usr/bin/docker run --name=%n --rm --privileged instantchat/broadcaster\n      ExecStop=/usr/bin/docker stop %n\n      \n      [X-Fleet]\n      MachineMetadata=role=broadcaster\n","response":{"droplet":{"id":2726123,"name":"e9b54487-0ea3-4b4b-bac3-f41a2e374a19","memory":512,"vcpus":1,"disk":20,"region":{"slug":"sfo1","name":"San Francisco 1","sizes":["2gb","4gb","8gb","1gb","16gb","32gb","48gb","512mb","64gb"],"available":true,"features":["virtio","backups","metadata"]},"image":{"id":6198091,"name":"CoreOS 444.0.0 (alpha)","distribution":"CoreOS","slug":"coreos-alpha","public":true,"regions":["sfo1","sgp1","lon1","nyc3","ams3"],"created_at":"2014-09-20T02:07:59Z"},"size":{"slug":"512mb","transfer":1,"price_monthly":5,"price_hourly":0.00744},"locked":true,"status":"new","networks":{},"kernel":null,"created_at":"2014-09-28T11:24:43Z","features":["virtio"],"backup_ids":[],"snapshot_ids":[]},"links":{"actions":[{"id":33358085,"rel":"create","href":"http://api.digitalocean.com/v2/actions/33358085"}]}}}]