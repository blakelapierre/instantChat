{"version":3,"file":"src/launcher.js","sources":["src/launcher.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,QAAQ,IAAI,SAAC,QAAO,CAAG,CAAA,GAAE;AAC5B,AAAI,IAAA,CAAA,kBAAiB,EAAI,EAAA;AACrB,aAAO,EAAI;AAAC,iBAAS,CAAG,EAAA;AAAG,WAAG,CAAG,EAAA;AAAA,MAAC,CAAC;AAEvC,OAAO,EAAE,MAAK,CAAL,OAAK,CAAE,CAAC;AAGjB,SAAS,OAAK,CAAE,QAAO;AACrB,SAAO,IAAI,QAAM,AAAC,EAAC,SAAC,OAAM,CAAG,CAAA,MAAK;AAChC,YAAO,QAAO,WAAW,EAAI,mBAAiB,CAAA,EAAK,CAAA,QAAO,KAAK,EAAI,CAAA,QAAO,OAAO;AAAG,iBAAS,AAAC,EAAC,CAAC;AAAA,AAEhG,aAAS,WAAS,CAAC,AAAC;AAClB,WAAI,QAAO,KAAK,GAAK,CAAA,QAAO,OAAO;AAAG,eAAO,CAAA,OAAM,AAAC,CAAC,QAAO,CAAC,CAAC;AAAA,AAE1D,UAAA,CAAA,OAAM,EAAI,CAAA,QAAO,CAAE,QAAO,KAAK,CAAC,CAAC;AAErC,oBAAY,AAAC,CAAC,OAAM,CAAC,KAAK,AAAC,EAAC,SAAA,IAAG,CAAK;AAClC,gBAAM,IAAI,AAAC,CAAC,UAAS,CAAG,CAAA,OAAM,GAAG,CAAC,CAAC;AACnC,gBAAM,SAAS,EAAI,KAAG,CAAC;AACvB,iBAAO,WAAW,EAAE,CAAC;AACrB,mBAAS,AAAC,EAAC,CAAC;QACd,IAAG,SAAA,KAAI,CAAK;AACV,iBAAO,WAAW,EAAE,CAAC;AACrB,mBAAS,AAAC,EAAC,CAAC;QACd,EAAC,CAAC;AAEF,eAAO,KAAK,EAAE,CAAC;AACf,eAAO,WAAW,EAAE,CAAC;MACvB;AAEA,aAAS,cAAY,CAAE,OAAM;AAC3B,aAAO,IAAI,QAAM,AAAC,EAAC,SAAC,OAAM,CAAG,CAAA,MAAK,CAAM;AACtC,iBAAO,cAAc,AAAC,CAAC,OAAM,CAAG,QAAM,CAAG,OAAK,CAAC,CAAC;QAClD,EAAC,CAAC;MACJ;IACF,EAAC,CAAC;EACJ;AACF,CAAA,CAAC;AAAA","sourceRoot":"/home/blake/development/instantChat/admin","sourcesContent":["module.exports = (provider, log) => {\n  var concurrentLaunches = 1,\n      launches = {inProgress: 0, next: 0};\n\n  return { launch };\n\n  // Currently can only have one of these running\n  function launch(machines) {\n    return new Promise((resolve, reject) => {\n      while (launches.inProgress < concurrentLaunches && launches.next < machines.length) launchNext();\n\n      function launchNext() {\n        if (launches.next >= machines.length) return resolve(machines);\n\n        var machine = machines[launches.next];\n\n        launchMachine(machine).then(data => {\n          console.log('launched', machine.id);\n          machine.response = data;\n          launches.inProgress--;\n          launchNext();\n        }, error => {\n          launches.inProgress--;\n          launchNext();\n        });\n\n        launches.next++;\n        launches.inProgress++;\n      }\n\n      function launchMachine(machine) {\n        return new Promise((resolve, reject) => {\n          provider.createMachine(machine, resolve, reject);\n        });\n      }\n    });\n  }\n};"]}